{"version":3,"sources":["redux/contacts-actions.js","FormAddContacts/FormAddContacts.js","redux/contacts-operations.js","Contacts/Contacts.js","Filter/Filter.js","Phonebook/Phonebook.js","App.js","redux/contacts-reducer.js","redux/store.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","FormAddContacts","useState","name","setName","number","setNumber","contacts","useSelector","state","items","dispatch","useDispatch","formSubmitHandler","alreadyAddedContact","find","contact","alert","a","axios","post","data","addContact","handleChange","event","target","value","reset","onSubmit","preventDefault","className","type","pattern","title","required","onChange","Contacts","toLowerCase","filter","showContacts","includes","onDeleteContact","contactId","delete","then","catch","error","deleteContact","map","id","onClick","Filter","handleFilter","length","currentTarget","Phonebook","App","createReducer","_","action","payload","isLoading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2WAGaA,EAAuBC,YAAa,iCAEpCC,EAAuBD,YAAa,iCAEpCE,EAAqBF,YAAa,+BAGlCG,EAAoBH,YAAa,8BAEjCI,EAAoBJ,YAAa,8BAEjCK,EAAkBL,YAAa,4BAG/BM,EAAuBN,YAAa,iCAEpCO,EAAuBP,YAAa,iCAEpCQ,EAAqBR,YAAa,+BAGlCS,EAAeT,YAAa,yB,eCnB1B,SAASU,IACpB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,SAC/CC,EAAWC,cAEXC,EAAoB,SAAEV,EAAME,GAC9B,IAAMS,EAAsBP,EAASQ,MAAK,SAAAC,GAAO,OAAIA,EAAQb,OAASA,KAClEW,EACAG,MAAM,GAAD,OAAIH,EAAoBX,KAAxB,4BAITQ,ECQoB,SAACR,EAAME,GAAP,8CAAkB,WAAMM,GAAN,mBAAAO,EAAA,6DACpCF,EAAU,CACdb,OACAE,UAGFM,EAASjB,KANiC,kBASjByB,IAAMC,KAAK,iCAAkCJ,GAT5B,gBAShCK,EATgC,EAShCA,KACRV,EAAShB,EAAkB0B,IAVa,kDAYxCV,EAASf,EAAgB,EAAD,KAZgB,0DAAlB,sDDRX0B,CAAW,CAAEnB,OAAME,aAG1BkB,EAAe,SAAAC,GACjB,MAAwBA,EAAMC,OAAtBtB,EAAR,EAAQA,KAAMuB,EAAd,EAAcA,MAEd,OAAQvB,GACJ,IAAK,OACDC,EAAQsB,GACR,MAEJ,IAAK,SACDpB,EAAUoB,GACV,MAEJ,QACI,SAWNC,EAAQ,WACXvB,EAAQ,IACRE,EAAU,KAGT,OACI,sBAAMsB,SAbO,SAAAJ,GACjBA,EAAMK,iBAENhB,EAAkBV,EAAME,GACxBsB,KASI,SACE,sBAAKG,UAAU,aAAf,UACE,yCACQ,uBACJA,UAAU,YACVC,KAAK,OACL5B,KAAK,OACL6B,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRR,MAAOvB,EACPgC,SAAUZ,OAGd,2CACU,uBACNO,UAAU,YACVC,KAAK,MACL5B,KAAK,SACL6B,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRR,MAAOrB,EACP8B,SAAUZ,OAId,wBAAQO,UAAU,UAAUC,KAAK,SAAjC,8B,UE/CDK,EA3BE,WACb,IAAM7B,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,SAC/CC,EAAWC,cAGXyB,EAFS7B,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAAS+B,UAExBD,cACrBE,EAAehC,EAAS+B,QAAO,SAAAtB,GAAO,OACvCA,EAAQb,KAAKkC,cAAcG,SAASH,MAGnCI,EAAkB,SAACC,GACrB/B,ED2BuB,SAAA+B,GAAS,OAAI,SAAA/B,GACxCA,EAASd,KAETsB,IACGwB,OADH,mBACsBD,IACnBE,MAAK,kBAAMjC,EAASb,EAAqB4C,OACzCG,OAAM,SAAAC,GAAK,OAAInC,EAASZ,EAAmB+C,QCjCjCC,CAAcL,KAG3B,OAAOnC,GACH,6BACKgC,EAAaS,KAAI,gBAAGC,EAAH,EAAGA,GAAI9C,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACd,qBAAayB,UAAU,iBAAvB,UACI,oBAAGA,UAAU,iBAAb,UAA+B3B,EAA/B,KAAuCE,KACvC,wBAAQ6C,QAAS,kBAAMT,EAAgBQ,IAAvC,sBAFKA,SCgBVE,G,MAjCA,WACX,IAAM5C,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,SAC/C4B,EAAS9B,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAAS+B,UAC7C3B,EAAWC,cAQjB,IAAMwC,EAAe,SAAA1B,GACjBf,EAASX,EAAa0B,KAG1B,OAA2B,IAApBnB,EAAS8C,OACZ,8BACA,0DACyB,uBACrBvB,UAAU,eACVC,KAAK,OACL5B,KAAK,SACLuB,MAAOY,EACPH,SAjBR,SAA0BX,GACtB,IAAQE,EAAUF,EAAM8B,cAAhB5B,MACR0B,EAAa1B,WAqBb,yE,MChBO6B,I,MAAAA,EAbf,WAEI,OACI,sBAAKzB,UAAU,YAAf,UACI,2CACA,cAAC,EAAD,IACA,0CACA,cAAC,EAAD,IACA,cAAC,EAAD,QCHG0B,EARH,WACV,OAEI,cAAC,EAAD,K,8CCSA9C,EAAQ+C,YAAc,IAAD,mBACtBjE,GAAuB,SAACkE,EAAGC,GAAJ,OAAeA,EAAOC,WADvB,cAEtBjE,GAAoB,SAACc,EAAOkD,GAAR,4BAAuBlD,GAAvB,CAA8BkD,EAAOC,aAFnC,cAGtB9D,GAAuB,SAACW,EAAOkD,GAAR,OACtBlD,EAAM6B,QAAO,qBAAGW,KAAgBU,EAAOC,cAJlB,IAOnBC,EAAYJ,aAAc,GAAD,mBAC5BnE,GAAuB,kBAAM,KADD,cAE5BE,GAAuB,kBAAM,KAFD,cAG5BC,GAAqB,kBAAM,KAHC,cAK5BC,GAAoB,kBAAM,KALE,cAM5BC,GAAoB,kBAAM,KANE,cAO5BC,GAAkB,kBAAM,KAPI,cAS5BC,GAAuB,kBAAM,KATD,cAU5BC,GAAuB,kBAAM,KAVD,cAW5BC,GAAqB,kBAAM,KAXC,IAczB+C,EAAQW,YAAc,MAAD,mBACxBhE,GAAqB,SAACiE,EAAGC,GAAJ,OAAeA,EAAOC,WADnB,cAExBtE,GAAuB,kBAAM,QAFL,cAIxBM,GAAkB,SAAC8D,EAAGC,GAAJ,OAAeA,EAAOC,WAJhB,cAKxBlE,GAAoB,kBAAM,QALF,cAOxBK,GAAqB,SAAC2D,EAAGC,GAAJ,OAAeA,EAAOC,WAPnB,cAQxB/D,GAAuB,kBAAM,QARL,IAWrByC,EAASmB,YAAc,GAAD,eACzBzD,GAAe,SAAC0D,EAAGC,GAAJ,OAAeA,EAAOC,YAGzBE,cAAgB,CAC7BpD,QACAmD,YACAf,QACAR,WC1CEyB,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAGWC,EAAQC,YAAe,CAClCC,QAAS,CACPrE,SAAUsE,GAEZd,aACAe,UAAUC,ICnBZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGNS,SAASC,eAAe,W","file":"static/js/main.dbb83e68.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\n// fetch pending\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\n// fetch fulfilled\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\n// fetch rejected\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\n// add pending\nexport const addContactRequest = createAction('contacts/addContactRequest');\n// add fulfilled\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\n// add rejected\nexport const addContactError = createAction('contacts/addContactError');\n\n// delete pending\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\n// delete fulfilled\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\n// delete rejected\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\n\nexport const changeFilter = createAction('contacts/changeFilter');\n\n\n\n\n// import { createAction } from '@reduxjs/toolkit';\n// import { v4 as uuidv4 } from 'uuid';\n\n// const addContact = createAction('contacts/add', ({name, number}) => ({\n//     payload: {\n//         id: uuidv4(),\n//         name,\n//         number,\n//     },\n// }));\n// const deleteContact = createAction('contacts/delete')\n// const changeFilter = createAction('contacts/filter')\n\n// export { addContact, deleteContact, changeFilter };\n\n\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../redux/contacts-operations';\nimport './FormAddContacts.css';\n\nexport default function FormAddContacts() {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const contacts = useSelector(state => state.contacts.items);\n    const dispatch = useDispatch();\n\n    const formSubmitHandler = ( name, number ) => {\n        const alreadyAddedContact = contacts.find(contact => contact.name === name);\n        if (alreadyAddedContact) {\n            alert(`${alreadyAddedContact.name} is already in contacts`);\n            return;\n        }\n\n        dispatch(addContact({ name, number }));\n    };\n\n    const handleChange = event => {\n        const { name, value } = event.target;\n\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n\n            case 'number':\n                setNumber(value);\n                break;\n\n            default:\n                return;\n        }\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        formSubmitHandler(name, number);\n        reset();\n    };\n\n    const reset = () => {\n       setName('');\n       setNumber('');\n    };\n\n        return (\n            <form onSubmit={handleSubmit}>\n              <div className=\"input-form\">\n                <label>\n                    Name<input\n                    className=\"add-input\"\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    value={name}\n                    onChange={handleChange}\n                /> \n                </label>\n                <label>\n                    Number<input\n                    className=\"add-input\"\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    required\n                    value={number}\n                    onChange={handleChange}\n                    />\n                </label>\n\n                <button className=\"btn-add\" type=\"submit\">Add contact</button>\n            </div>  \n            </form>\n        );\n};","import axios from 'axios';\n// import * as contactsAPI from './contacts-api';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\n// axios.defaults.baseURL = 'http://localhost:3000';\n\nexport const fetchContacts = () => async dispatch => {\n    dispatch(fetchContactsRequest());\n  \n    try {\n      const { data } = await axios.get('http://localhost:7777/contacts');\n      dispatch(fetchContactsSuccess(data));\n    } catch (error) {\n      dispatch(fetchContactsError(error));\n    }\n  };\n  \n  export const addContact = (name, number) => async dispatch => {\n    const contact = {\n      name,\n      number,\n    };\n  \n    dispatch(addContactRequest());\n  \n    try {\n      const { data } = await axios.post('http://localhost:7777/contacts', contact);\n      dispatch(addContactSuccess(data));\n    } catch (error) {\n      dispatch(addContactError(error));\n    }\n  };\n  \n  export const deleteContact = contactId => dispatch => {\n    dispatch(deleteContactRequest());\n  \n    axios\n      .delete(`contacts/${contactId}`)\n      .then(() => dispatch(deleteContactSuccess(contactId)))\n      .catch(error => dispatch(deleteContactError(error)));\n  };\n\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../redux/contacts-operations';\nimport './Contacts.css';\n\nconst Contacts = () => {\n    const contacts = useSelector(state => state.contacts.items);\n    const dispatch = useDispatch();\n    const filter = useSelector(state => state.contacts.filter);\n\n    const toLowerCase = filter.toLowerCase();\n    const showContacts = contacts.filter(contact =>\n         contact.name.toLowerCase().includes(toLowerCase)\n    );\n\n    const onDeleteContact = (contactId) => {\n        dispatch(deleteContact(contactId))\n    };\n\n    return contacts && (\n        <ul>\n            {showContacts.map(({ id, name, number }) => (\n                <li key={id} className=\"contacts__item\">\n                    <p className=\"contacts__text\">{name}: {number}</p>\n                    <button onClick={() => onDeleteContact(id)}>delete</button>\n                </li>\n            ))}\n        </ul>\n    )\n    \n};\n\nexport default Contacts;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../redux/contacts-actions';\nimport './Filter.css';\n\nconst Filter = () => {\n    const contacts = useSelector(state => state.contacts.items);\n    const filter = useSelector(state => state.contacts.filter);\n    const dispatch = useDispatch();\n\n\n    function getFilteredName (event) {\n        const { value } = event.currentTarget;\n        handleFilter(value);\n    }\n\n    const handleFilter = value => {\n        dispatch(changeFilter(value))\n    };\n\n    return contacts.length !== 0 ? (\n        <div>\n        <label>\n            Find contacts by Name<input\n            className=\"filter-input\"\n            type=\"text\"\n            name=\"filter\"\n            value={filter}\n            onChange={getFilteredName}\n        />\n        </label>\n        \n        </div>\n        ) : (\n        <p>There is no contacts in your Phonebook</p>\n    )\n};\n\nexport default Filter;","import FormAddContacts from '../FormAddContacts/FormAddContacts';\nimport Contacts from '../Contacts/Contacts';\nimport Filter from '../Filter/Filter';\nimport './Phonebook.css';\n\nfunction Phonebook() {\n\n    return (\n        <div className=\"phonebook\">\n            <h1>Phonebook</h1>\n            <FormAddContacts />\n            <h2>Contacts</h2>\n            <Filter />\n            <Contacts />\n        </div>\n    );\n}\n\nexport default Phonebook;","import Phonebook from './Phonebook/Phonebook'\n\nconst App = () => {\n  return (\n  \n      <Phonebook />\n    \n  );\n};\n\nexport default App;\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n    [fetchContactsSuccess]: (_, action) => action.payload,\n    [addContactSuccess]: (state, action) => [...state, action.payload],\n    [deleteContactSuccess]: (state, action) =>\n      state.filter(({ id }) => id !== action.payload),\n  });\n  \n  const isLoading = createReducer(false, {\n    [fetchContactsRequest]: () => true,\n    [fetchContactsSuccess]: () => false,\n    [fetchContactsError]: () => false,\n  \n    [addContactRequest]: () => true,\n    [addContactSuccess]: () => false,\n    [addContactError]: () => false,\n  \n    [deleteContactRequest]: () => true,\n    [deleteContactSuccess]: () => false,\n    [deleteContactError]: () => false,\n  });\n  \n  const error = createReducer(null, {\n    [fetchContactsError]: (_, action) => action.payload,\n    [fetchContactsRequest]: () => null,\n  \n    [addContactError]: (_, action) => action.payload,\n    [addContactRequest]: () => null,\n  \n    [deleteContactError]: (_, action) => action.payload,\n    [deleteContactRequest]: () => null,\n  });\n  \n  const filter = createReducer('', {\n    [changeFilter]: (_, action) => action.payload,\n  });\n  \n  export default combineReducers({\n    items,\n    isLoading,\n    error,\n    filter,\n  });\n\n\n\n\n\n\n\n// const itemReducer = createReducer([], {\n//     [addContact]: (state, action) => [...state, action.payload],\n//     [deleteContact]: (state, action) => state.filter(contact => contact.id !== action.payload),\n// });\n\n// const filterReducer = createReducer('', {\n//     [changeFilter]: (_, action) => action.payload,\n// });\n\n// export default combineReducers({\n//     items: itemReducer,\n//     filter: filterReducer,\n// });","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport logger from 'redux-logger';\nimport contactsReducer from './contacts-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}